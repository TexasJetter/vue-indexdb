:root {
  /* generic */
  --gutterSm: 0.4rem;
  --gutterMd: 0.8rem;
  --gutterLg: 1.6rem;
  --gutterXl: 2.4rem;
  --gutterXx: 7.2rem;
  --colorText: rgb(95, 95, 95);
  --colorPrimary400: rgb(12, 0, 180);
  --colorPrimary600: rgb(14, 5, 141);
  --colorPrimary800: rgb(9, 3, 92);

  --colorPrimary: rgb(243, 125, 49);
  --colorPrimary80: rgba(243, 125, 49, 0.8);
  --colorSecondary: rgb(250, 248, 244);
  --colorLink: rgb(244, 139, 68);
  --colorLinkHover: rgb(244, 139, 68);
  --colorError: red;
  --colorWarning: gold;
  --colorSuccess: green;
  --backgroundColor: rgb(255, 255, 255);
  --buttonColor: rgb(255, 255, 255);
  --buttonBackgroundColor: rgb(90, 97, 117);
  --buttonHoverColor: rgb(90, 97, 117);
  --buttonHoverBackgroundColor: rgb(169, 174, 185);
  --buttonDiabledBackgroundColor: gray;
  --buttonRadius: 20px;
  --borderRadius: 0.5rem;
  --fontFamily: Arial;
  --fontSizeSm: 0.9rem;
  --fontSizeMd: 1rem;
  --fontSizeLg: 1.3rem;
  --fontSizeXl: 1.8rem;
  --fontSizeXx: 2rem;
  --lineHeightSm: 1.1;
  --lineHeightMd: 1.8;
  --shadowColor: rgba(0, 0, 0, 0.2);
  --transitionDuration: 300ms;
  --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);

  /* floated labels */
  --inputPlaceholder: rgba(95, 95, 95, 0.3);
  --inputPaddingV: var(--gutterSm);
  --inputPaddingH: var(--gutterMd);
  --inputFontSize: var(--fontSizeMd);
  --inputLineHeight: var(--lineHeightMd);
  --labelScaleFactor: 0.8;
  --labelDefaultPosY: 50%;
  --labelTransformedPosY: calc((var(--labelDefaultPosY)) - (var(--inputPaddingV) * var(--labelScaleFactor)) - (var(--inputFontSize) * var(--inputLineHeight)));
  --inputTransitionDuration: var(--transitionDuration);
  --inputTransitionTF: var(--transitionTF);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}
body,
#app {
  margin: 0;
  padding: 0;
  color: var(--colorText);
  background-color: var(--backgroundColor);
  font-family: var(--fontFamily);
  font-size: var(--fontSizeMd);
}
#app-nav {
  position: relative;
  margin: 10px;
}
.app-content {
  position: relative;
  margin: 0px 25px 25px 25px;
}

/*standard elements*/
a {
  color: var(--colorLink);
  text-decoration: none;
  cursor: pointer;
}
a:hover {
  color: var(--colorLinkHover);
  text-decoration: underline;
}
/*buttons*/
button,
.button-link {
  border: none;
  cursor: pointer;
  color: var(--buttonColor);
  padding: var(--inputPaddingV) var(--inputPaddingH);
  border-radius: var(--buttonRadius);
  font-size: var(--inputFontSize);
  background-color: var(--buttonBackgroundColor);
  outline: none;
  margin: 5px;
}

button:hover,
.button-link:hover {
  text-decoration: none;
  color: var(--buttonHoverColor);
  background-color: var(--buttonHoverBackgroundColor);
}
button:disabled,
button:disabled:hover,
.button-link:disabled:hover {
  cursor: not-allowed;
  color: var(--buttonColor);
  background-color: var(--buttonDiabledBackgroundColor);
}
/* Ripple magic */
button {
  position: relative;
  overflow: hidden;
}

button:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.5);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%);
  transform-origin: 50% 50%;
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 1;
  }
  20% {
    transform: scale(25, 25);
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(40, 40);
  }
}

button:focus:not(:active)::after,
.button-link:focus:not(:active)::after {
  animation: ripple 1s ease-out;
}
/*buttons end*/

/*standard elements end*/

/* form input */
/*https://freefrontend.com/css-input-text/*/
.i-group {
  position: relative;
  margin: 15px 0 5px 0;
}
.i-group > input[type="text"],
.i-group > input[type="password"],
.i-group > select {
  display: block;
  margin: 0;
  padding: var(--inputPaddingV) var(--inputPaddingH);
  color: inherit;
  width: 100%;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  border: 1px solid var(--colorPrimary80);
  border-radius: var(--borderRadius);
  transition: box-shadow var(--transitionDuration);
}
.i-group > input[type="text"]::placeholder,
.i-group > input[type="password"]::placeholder,
.i-group > select::placeholder {
  color: var(--inputPlaceholder);
}
.i-group > input[type="text"]:focus,
.i-group > input[type="password"]:focus,
.i-group > select:focus {
  outline: none;
  box-shadow: 0.2rem 0.2rem 0.2rem var(--colorPrimary80);
}
.i-group > label {
  padding: 0 5px;
  display: block;
  position: absolute;
  bottom: 16%;
  left: 1rem;
  background-color: var(--backgroundColor);
  /* color: #fff; */
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  opacity: 0;
  transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
  transform-origin: 0 0;
  transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF), transform var(--inputTransitionDuration) var(--inputTransitionTF), visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
}
.i-group > input[type="text"]:placeholder-shown + label,
.i-group > input[type="password"]:placeholder-shown + label {
  visibility: hidden;
  z-index: -1;
}
.i-group > input[type="text"]:not(:placeholder-shown) + label,
.i-group > input[type="text"]:focus:not(:placeholder-shown) + label,
.i-group > input[type="password"]:not(:placeholder-shown) + label,
.i-group > input[type="password"]:focus:not(:placeholder-shown) + label {
  visibility: visible;
  z-index: 1;
  opacity: 1;
  transform: translate3d(0, var(--labelTransformedPosY), 0) scale(var(--labelScaleFactor));
  transition: transform var(--inputTransitionDuration), visibility 0ms, z-index 0ms;
}
.i-group > select {
  height: 45px;
  padding-top: 15px;
}
.i-group input[type="checkbox"] {
  width: 24px;
  height: 24px;
}
.i-group > select + label,
.i-group > input[type="checkbox"] + label {
  visibility: visible;
  z-index: 1;
  opacity: 1;
  transform: translate3d(0, var(--labelTransformedPosY), 0) scale(var(--labelScaleFactor));
  transition: transform var(--inputTransitionDuration), visibility 0ms, z-index 0ms;
}
.i-group > input[type="checkbox"] + label {
  top: 38px;
  left: 38px;
}

/* form input */
